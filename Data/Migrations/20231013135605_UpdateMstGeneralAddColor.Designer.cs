// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20231013135605_UpdateMstGeneralAddColor")]
    partial class UpdateMstGeneralAddColor
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Core.Models.Entities.Tables.TAccMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Controller")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MenuGroupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MenuGroupId");

                    b.ToTable("AccMenu", (string)null);
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TAccMenuGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDirectMenu")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AccMenuGroup", (string)null);
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TAccMRoleMenu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AllowCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowView")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("AccMRoleMenu", (string)null);
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TAccRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AccRole", (string)null);
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TAccUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AccUser", (string)null);
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TDeployDevice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BASTCompDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("BASTCompFileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BASTVendorDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("BASTVendorFileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DeployBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DeployDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DivisionId")
                        .HasColumnType("int");

                    b.Property<string>("EmpName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpStatus")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("HostName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("JobGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("JobTitleId")
                        .HasColumnType("int");

                    b.Property<string>("NRP")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid?>("ReturnFormFileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UndeployBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UndeployDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("BASTCompFileId");

                    b.HasIndex("BASTVendorFileId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("JobGroupId");

                    b.HasIndex("JobTitleId");

                    b.HasIndex("ReturnFormFileId");

                    b.ToTable("TransDeployDevice", (string)null);
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TFileRepository", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UploadBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("FileRepository", (string)null);
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TLogIntegrationIoT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Request")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LogIntegrationIoT", (string)null);
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TMstAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("BASTVendorDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("BASTVendorFileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BASTVendorReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("BASTVendorReturnFileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BuyBackDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("BuyBackFileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeviceCatId")
                        .HasColumnType("int");

                    b.Property<int?>("DeviceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("IoTDeviceToken")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAsset")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEndPeriod")
                        .HasColumnType("bit");

                    b.Property<string>("MacAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("PODate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PONumber")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("PeriodFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PeriodTo")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProductBrandId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("RentPrice")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("StartBillingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<decimal?>("TotalPrice")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BASTVendorFileId");

                    b.HasIndex("BASTVendorReturnFileId");

                    b.HasIndex("BuyBackFileId");

                    b.HasIndex("DeviceCatId");

                    b.HasIndex("DeviceTypeId");

                    b.HasIndex("ProductBrandId");

                    b.HasIndex("ProductTypeId");

                    b.HasIndex("VendorId");

                    b.ToTable("MstAsset", (string)null);
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TMstEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("DivisionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("JobGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("JobTitleId")
                        .HasColumnType("int");

                    b.Property<string>("NRP")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("OutDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("JobGroupId");

                    b.HasIndex("JobTitleId");

                    b.ToTable("MstEmployee", (string)null);
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TMstGeneral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Abbreviation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ChartColor")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("MstGeneral", (string)null);
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TUpload", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("SubmitBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("SubmitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UploadBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Upload", (string)null);
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TUploadAsset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BASTVendorDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeviceCatId")
                        .HasColumnType("int");

                    b.Property<int?>("DeviceTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAsset")
                        .HasColumnType("bit");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("MacAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("PODate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PONumber")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("PeriodFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PeriodTo")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProductBrandId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("RentPrice")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<decimal?>("TotalPrice")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<Guid>("UploadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeviceCatId");

                    b.HasIndex("DeviceTypeId");

                    b.HasIndex("ProductBrandId");

                    b.HasIndex("ProductTypeId");

                    b.HasIndex("UploadId");

                    b.HasIndex("VendorId");

                    b.ToTable("UploadAsset", (string)null);
                });

            modelBuilder.Entity("Core.Models.Entities.Views.VwAccUserMenu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AllowCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowView")
                        .HasColumnType("bit");

                    b.Property<string>("GroupIcon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsDirectMenu")
                        .HasColumnType("bit");

                    b.Property<string>("MenuController")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuOrder")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToView("VwAccUserMenu");
                });

            modelBuilder.Entity("Core.Models.Entities.Views.VwDsDeviceAllocated", b =>
                {
                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeviceCount")
                        .HasColumnType("int");

                    b.Property<string>("DeviceType")
                        .HasColumnType("nvarchar(max)");

                    b.ToView("VwDsDeviceAllocated");
                });

            modelBuilder.Entity("Core.Models.Entities.Views.VwDsDeviceEndPeriod", b =>
                {
                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeviceCount")
                        .HasColumnType("int");

                    b.Property<string>("DeviceType")
                        .HasColumnType("nvarchar(max)");

                    b.ToView("VwDsDeviceEndPeriod");
                });

            modelBuilder.Entity("Core.Models.Entities.Views.VwDsDeviceEndPeriodYear", b =>
                {
                    b.Property<int>("DeviceCount")
                        .HasColumnType("int");

                    b.Property<string>("DeviceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.ToView("VwDsDeviceEndPeriodYear");
                });

            modelBuilder.Entity("Core.Models.Entities.Views.VwDsDeviceStockByBrand", b =>
                {
                    b.Property<int>("DeviceCount")
                        .HasColumnType("int");

                    b.Property<string>("DeviceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductBrand")
                        .HasColumnType("nvarchar(max)");

                    b.ToView("VwDsDeviceStockByBrand");
                });

            modelBuilder.Entity("Core.Models.Entities.Views.VwDsDeviceStockByCategory", b =>
                {
                    b.Property<string>("DeviceCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeviceCount")
                        .HasColumnType("int");

                    b.Property<string>("DeviceStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.ToView("VwDsDeviceStockByCategory");
                });

            modelBuilder.Entity("Core.Models.Entities.Views.VwDsDeviceStockByStatus", b =>
                {
                    b.Property<int>("DeviceCount")
                        .HasColumnType("int");

                    b.Property<string>("DeviceStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceType")
                        .HasColumnType("nvarchar(max)");

                    b.ToView("VwDsDeviceStockByStatus");
                });

            modelBuilder.Entity("Core.Models.Entities.Views.VwDsDeviceYoY", b =>
                {
                    b.Property<int>("DeviceCount")
                        .HasColumnType("int");

                    b.Property<string>("DeviceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.ToView("VwDsDeviceYoY");
                });

            modelBuilder.Entity("Core.Models.Entities.Views.VwMstAsset", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AssetBranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BASTVendorDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("BASTVendorFileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BASTVendorFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BASTVendorReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("BASTVendorReturnFileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BASTVendorReturnFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BuyBackDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("BuyBackFileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BuyBackFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceCatName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivisionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IoTDeviceToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAsset")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEndPeriod")
                        .HasColumnType("bit");

                    b.Property<string>("JobGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MacAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PODate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PONumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PeriodFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PeriodTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductBrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("RentPrice")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartBillingDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("TotalPrice")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("VendorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToView("VwMstAsset");
                });

            modelBuilder.Entity("Core.Models.Entities.Views.VwMstEmployee", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivisionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("JobGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OutDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToView("VwMstEmployee");
                });

            modelBuilder.Entity("Core.Models.Entities.Views.VwTransDeployDevice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<string>("AssetStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BASTCompDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("BASTCompFileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BASTCompFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BASTVendorDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("BASTVendorFileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BASTVendorFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeployBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeployDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceCatName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivisionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("HostName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IoTDeviceToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MacAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PeriodFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PeriodTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductBrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ReturnFormFileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReturnFormFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UndeployBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UndeployDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToView("VwTransDeployDevice");
                });

            modelBuilder.Entity("Core.Models.Entities.Views.VwUploadAsset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BASTVendorDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceCatName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAsset")
                        .HasColumnType("bit");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("MacAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PODate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PONumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PeriodFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PeriodTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductBrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("RentPrice")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalPrice")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<Guid>("UploadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VendorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToView("VwUploadAsset");
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TAccMenu", b =>
                {
                    b.HasOne("Core.Models.Entities.Tables.TAccMenuGroup", "MenuGroup")
                        .WithMany("Menus")
                        .HasForeignKey("MenuGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuGroup");
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TAccMRoleMenu", b =>
                {
                    b.HasOne("Core.Models.Entities.Tables.TAccMenu", "Menu")
                        .WithMany("RoleMenus")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Models.Entities.Tables.TAccRole", "Role")
                        .WithMany("RoleMenus")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TAccUser", b =>
                {
                    b.HasOne("Core.Models.Entities.Tables.TAccRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TDeployDevice", b =>
                {
                    b.HasOne("Core.Models.Entities.Tables.TMstAsset", "Asset")
                        .WithMany("DeployDevices")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Models.Entities.Tables.TFileRepository", "BASTCompFile")
                        .WithMany("BASTCompDeploy")
                        .HasForeignKey("BASTCompFileId");

                    b.HasOne("Core.Models.Entities.Tables.TFileRepository", "BASTVendorFile")
                        .WithMany("BASTVendorDeploy")
                        .HasForeignKey("BASTVendorFileId");

                    b.HasOne("Core.Models.Entities.Tables.TMstGeneral", "Branch")
                        .WithMany("DeployBranches")
                        .HasForeignKey("BranchId");

                    b.HasOne("Core.Models.Entities.Tables.TMstGeneral", "Company")
                        .WithMany("DeployCompanies")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Core.Models.Entities.Tables.TMstGeneral", "Department")
                        .WithMany("DeployDepartments")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("Core.Models.Entities.Tables.TMstGeneral", "Division")
                        .WithMany("DeployDivisions")
                        .HasForeignKey("DivisionId");

                    b.HasOne("Core.Models.Entities.Tables.TMstEmployee", "Employee")
                        .WithMany("DeployDevices")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Models.Entities.Tables.TMstGeneral", "JobGroup")
                        .WithMany("DeployJobGroups")
                        .HasForeignKey("JobGroupId");

                    b.HasOne("Core.Models.Entities.Tables.TMstGeneral", "JobTitle")
                        .WithMany("DeployJobTitles")
                        .HasForeignKey("JobTitleId");

                    b.HasOne("Core.Models.Entities.Tables.TFileRepository", "ReturnFormFile")
                        .WithMany("ReturnFormDeploy")
                        .HasForeignKey("ReturnFormFileId");

                    b.Navigation("Asset");

                    b.Navigation("BASTCompFile");

                    b.Navigation("BASTVendorFile");

                    b.Navigation("Branch");

                    b.Navigation("Company");

                    b.Navigation("Department");

                    b.Navigation("Division");

                    b.Navigation("Employee");

                    b.Navigation("JobGroup");

                    b.Navigation("JobTitle");

                    b.Navigation("ReturnFormFile");
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TMstAsset", b =>
                {
                    b.HasOne("Core.Models.Entities.Tables.TFileRepository", "BASTVendorFile")
                        .WithMany("BASTVendorAssets")
                        .HasForeignKey("BASTVendorFileId");

                    b.HasOne("Core.Models.Entities.Tables.TFileRepository", "BASTVendorReturnFile")
                        .WithMany("BASTVendorReturnAssets")
                        .HasForeignKey("BASTVendorReturnFileId");

                    b.HasOne("Core.Models.Entities.Tables.TFileRepository", "BuyBackFile")
                        .WithMany("BuyBackAssets")
                        .HasForeignKey("BuyBackFileId");

                    b.HasOne("Core.Models.Entities.Tables.TMstGeneral", "DeviceCat")
                        .WithMany("AssetDeviceCats")
                        .HasForeignKey("DeviceCatId");

                    b.HasOne("Core.Models.Entities.Tables.TMstGeneral", "DeviceType")
                        .WithMany("AssetDeviceTypes")
                        .HasForeignKey("DeviceTypeId");

                    b.HasOne("Core.Models.Entities.Tables.TMstGeneral", "ProductBrand")
                        .WithMany("AssetProductBrands")
                        .HasForeignKey("ProductBrandId");

                    b.HasOne("Core.Models.Entities.Tables.TMstGeneral", "ProductType")
                        .WithMany("AssetProductTypes")
                        .HasForeignKey("ProductTypeId");

                    b.HasOne("Core.Models.Entities.Tables.TMstGeneral", "Vendor")
                        .WithMany("AssetVendors")
                        .HasForeignKey("VendorId");

                    b.Navigation("BASTVendorFile");

                    b.Navigation("BASTVendorReturnFile");

                    b.Navigation("BuyBackFile");

                    b.Navigation("DeviceCat");

                    b.Navigation("DeviceType");

                    b.Navigation("ProductBrand");

                    b.Navigation("ProductType");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TMstEmployee", b =>
                {
                    b.HasOne("Core.Models.Entities.Tables.TMstGeneral", "Branch")
                        .WithMany("EmpBranches")
                        .HasForeignKey("BranchId");

                    b.HasOne("Core.Models.Entities.Tables.TMstGeneral", "Company")
                        .WithMany("EmpCompanies")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Core.Models.Entities.Tables.TMstGeneral", "Department")
                        .WithMany("EmpDepartments")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("Core.Models.Entities.Tables.TMstGeneral", "Division")
                        .WithMany("EmpDivisions")
                        .HasForeignKey("DivisionId");

                    b.HasOne("Core.Models.Entities.Tables.TMstGeneral", "JobGroup")
                        .WithMany("EmpJobGroups")
                        .HasForeignKey("JobGroupId");

                    b.HasOne("Core.Models.Entities.Tables.TMstGeneral", "JobTitle")
                        .WithMany("EmpJobTitles")
                        .HasForeignKey("JobTitleId");

                    b.Navigation("Branch");

                    b.Navigation("Company");

                    b.Navigation("Department");

                    b.Navigation("Division");

                    b.Navigation("JobGroup");

                    b.Navigation("JobTitle");
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TMstGeneral", b =>
                {
                    b.HasOne("Core.Models.Entities.Tables.TMstGeneral", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TUploadAsset", b =>
                {
                    b.HasOne("Core.Models.Entities.Tables.TMstGeneral", "DeviceCat")
                        .WithMany("UploadAssetDeviceCats")
                        .HasForeignKey("DeviceCatId");

                    b.HasOne("Core.Models.Entities.Tables.TMstGeneral", "DeviceType")
                        .WithMany("UploadAssetDeviceTypes")
                        .HasForeignKey("DeviceTypeId");

                    b.HasOne("Core.Models.Entities.Tables.TMstGeneral", "ProductBrand")
                        .WithMany("UploadAssetProductBrands")
                        .HasForeignKey("ProductBrandId");

                    b.HasOne("Core.Models.Entities.Tables.TMstGeneral", "ProductType")
                        .WithMany("UploadAssetProductTypes")
                        .HasForeignKey("ProductTypeId");

                    b.HasOne("Core.Models.Entities.Tables.TUpload", "Upload")
                        .WithMany("UploadAssets")
                        .HasForeignKey("UploadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Models.Entities.Tables.TMstGeneral", "Vendor")
                        .WithMany("UploadAssetVendors")
                        .HasForeignKey("VendorId");

                    b.Navigation("DeviceCat");

                    b.Navigation("DeviceType");

                    b.Navigation("ProductBrand");

                    b.Navigation("ProductType");

                    b.Navigation("Upload");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TAccMenu", b =>
                {
                    b.Navigation("RoleMenus");
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TAccMenuGroup", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TAccRole", b =>
                {
                    b.Navigation("RoleMenus");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TFileRepository", b =>
                {
                    b.Navigation("BASTCompDeploy");

                    b.Navigation("BASTVendorAssets");

                    b.Navigation("BASTVendorDeploy");

                    b.Navigation("BASTVendorReturnAssets");

                    b.Navigation("BuyBackAssets");

                    b.Navigation("ReturnFormDeploy");
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TMstAsset", b =>
                {
                    b.Navigation("DeployDevices");
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TMstEmployee", b =>
                {
                    b.Navigation("DeployDevices");
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TMstGeneral", b =>
                {
                    b.Navigation("AssetDeviceCats");

                    b.Navigation("AssetDeviceTypes");

                    b.Navigation("AssetProductBrands");

                    b.Navigation("AssetProductTypes");

                    b.Navigation("AssetVendors");

                    b.Navigation("Childs");

                    b.Navigation("DeployBranches");

                    b.Navigation("DeployCompanies");

                    b.Navigation("DeployDepartments");

                    b.Navigation("DeployDivisions");

                    b.Navigation("DeployJobGroups");

                    b.Navigation("DeployJobTitles");

                    b.Navigation("EmpBranches");

                    b.Navigation("EmpCompanies");

                    b.Navigation("EmpDepartments");

                    b.Navigation("EmpDivisions");

                    b.Navigation("EmpJobGroups");

                    b.Navigation("EmpJobTitles");

                    b.Navigation("UploadAssetDeviceCats");

                    b.Navigation("UploadAssetDeviceTypes");

                    b.Navigation("UploadAssetProductBrands");

                    b.Navigation("UploadAssetProductTypes");

                    b.Navigation("UploadAssetVendors");
                });

            modelBuilder.Entity("Core.Models.Entities.Tables.TUpload", b =>
                {
                    b.Navigation("UploadAssets");
                });
#pragma warning restore 612, 618
        }
    }
}
